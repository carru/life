(()=>{"use strict";var t={336:(t,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.Board=void 0,a.Board=class{constructor(t,a){this._data=[],this._data=new Array(a).fill(0).map((()=>new Array(t).fill(0)))}randomize(){this._data.forEach(((t,a)=>{t.forEach(((t,e)=>{this._data[e][a]=Math.round(Math.random())}))}))}step(){this.randomize()}get data(){return this._data}set data(t){if(!t)throw new Error("Invalid board data");this._data=t}get width(){return this._data?this._data[0].length:0}get height(){return this._data?this._data.length:0}}},570:(t,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.Renderer=void 0,a.Renderer=class{constructor(){this.canvas=document.getElementById("board"),this.ctx=this.canvas.getContext("2d")}start(t){this.board=t,window.requestAnimationFrame((()=>this.draw()))}draw(){this.scaleToBoardSize(),this.ctx.fillStyle="black",this.board.data.forEach(((t,a)=>{t.forEach(((t,e)=>{t&&this.ctx.fillRect(e,a,1,1)}))})),window.requestAnimationFrame((()=>this.draw()))}scaleToBoardSize(){this.ctx.restore(),this.canvas.width=this.canvas.clientWidth,this.canvas.height=this.canvas.clientHeight,this.ctx.scale(this.canvas.width/this.board.width,this.canvas.height/this.board.height)}}}},a={};function e(r){var i=a[r];if(void 0!==i)return i.exports;var s=a[r]={exports:{}};return t[r](s,s.exports,e),s.exports}(()=>{const t=e(336),a=e(570);window.onload=()=>{let e=new t.Board(10,10);(new a.Renderer).start(e),setInterval((()=>e.step()),1e3)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saWZlLy4vc3JjL0JvYXJkLnRzIiwid2VicGFjazovL2xpZmUvLi9zcmMvUmVuZGVyZXIudHMiLCJ3ZWJwYWNrOi8vbGlmZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9saWZlLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbIndpZHRoIiwiaGVpZ2h0IiwiX2RhdGEiLCJ0aGlzIiwiQXJyYXkiLCJmaWxsIiwibWFwIiwiZm9yRWFjaCIsInJvdyIsInkiLCJjZWxsIiwieCIsIk1hdGgiLCJyb3VuZCIsInJhbmRvbSIsInJhbmRvbWl6ZSIsImRhdGEiLCJFcnJvciIsImxlbmd0aCIsImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjdHgiLCJnZXRDb250ZXh0IiwiYm9hcmQiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJkcmF3Iiwic2NhbGVUb0JvYXJkU2l6ZSIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwicmVzdG9yZSIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0Iiwic2NhbGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm9ubG9hZCIsIkJvYXJkIiwiUmVuZGVyZXIiLCJzdGFydCIsInNldEludGVydmFsIiwic3RlcCJdLCJtYXBwaW5ncyI6InNHQUFBLGNBR0ksWUFBWUEsRUFBZUMsR0FGakIsS0FBQUMsTUFBb0IsR0FHMUJDLEtBQUtELE1BQVEsSUFBSUUsTUFBTUgsR0FBUUksS0FBSyxHQUFHQyxLQUFJLElBQU0sSUFBSUYsTUFBTUosR0FBT0ssS0FBSyxLQUdwRSxZQUNIRixLQUFLRCxNQUFNSyxTQUFRLENBQUNDLEVBQUtDLEtBQ3JCRCxFQUFJRCxTQUFRLENBQUNHLEVBQU1DLEtBQ2ZSLEtBQUtELE1BQU1TLEdBQUdGLEdBQUtHLEtBQUtDLE1BQU1ELEtBQUtFLGdCQUt4QyxPQUVIWCxLQUFLWSxZQUdULFdBQ0ksT0FBT1osS0FBS0QsTUFHaEIsU0FBZ0JjLEdBQ1osSUFBS0EsRUFBTSxNQUFNLElBQUlDLE1BQU0sc0JBQzNCZCxLQUFLRCxNQUFRYyxFQUdqQixZQUNJLE9BQUtiLEtBQUtELE1BQ0hDLEtBQUtELE1BQU0sR0FBR2dCLE9BREcsRUFJNUIsYUFDSSxPQUFLZixLQUFLRCxNQUNIQyxLQUFLRCxNQUFNZ0IsT0FETSxLLCtFQ2pDaEMsaUJBS0ksY0FDSWYsS0FBS2dCLE9BQVNDLFNBQVNDLGVBQWUsU0FDdENsQixLQUFLbUIsSUFBTW5CLEtBQUtnQixPQUFPSSxXQUFXLE1BRy9CLE1BQU1DLEdBQ1RyQixLQUFLcUIsTUFBUUEsRUFDYkMsT0FBT0MsdUJBQXNCLElBQU12QixLQUFLd0IsU0FHbEMsT0FDTnhCLEtBQUt5QixtQkFFTHpCLEtBQUttQixJQUFJTyxVQUFZLFFBQ3JCMUIsS0FBS3FCLE1BQU1SLEtBQUtULFNBQVEsQ0FBQ0MsRUFBS0MsS0FDMUJELEVBQUlELFNBQVEsQ0FBQ0csRUFBTUMsS0FDWEQsR0FDQVAsS0FBS21CLElBQUlRLFNBQVNuQixFQUFHRixFQUFHLEVBQUcsU0FJdkNnQixPQUFPQyx1QkFBc0IsSUFBTXZCLEtBQUt3QixTQUdsQyxtQkFDTnhCLEtBQUttQixJQUFJUyxVQUNUNUIsS0FBS2dCLE9BQU9uQixNQUFRRyxLQUFLZ0IsT0FBT2EsWUFDaEM3QixLQUFLZ0IsT0FBT2xCLE9BQVNFLEtBQUtnQixPQUFPYyxhQUNqQzlCLEtBQUttQixJQUFJWSxNQUFNL0IsS0FBS2dCLE9BQU9uQixNQUFRRyxLQUFLcUIsTUFBTXhCLE1BQU9HLEtBQUtnQixPQUFPbEIsT0FBU0UsS0FBS3FCLE1BQU12QixZQ2xDekZrQyxFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhRSxRQUdyQixJQUFJQyxFQUFTTixFQUF5QkUsR0FBWSxDQUdqREcsUUFBUyxJQU9WLE9BSEFFLEVBQW9CTCxHQUFVSSxFQUFRQSxFQUFPRCxRQUFTSixHQUcvQ0ssRUFBT0QsUSxNQ3JCZixlQUNBLFNBRUFmLE9BQU9rQixPQUFTLEtBQ1osSUFBSW5CLEVBQVEsSUFBSSxFQUFBb0IsTUFBTSxHQUFJLEtBRVgsSUFBSSxFQUFBQyxVQUNWQyxNQUFNdEIsR0FHZnVCLGFBQVksSUFBTXZCLEVBQU13QixRQUFRLE8iLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEJvYXJkIHtcbiAgICBwcm90ZWN0ZWQgX2RhdGE6IG51bWJlcltdW10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuX2RhdGEgPSBuZXcgQXJyYXkoaGVpZ2h0KS5maWxsKDApLm1hcCgoKSA9PiBuZXcgQXJyYXkod2lkdGgpLmZpbGwoMCkpO1xuICAgIH1cblxuICAgIHB1YmxpYyByYW5kb21pemUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2RhdGEuZm9yRWFjaCgocm93LCB5KSA9PiB7XG4gICAgICAgICAgICByb3cuZm9yRWFjaCgoY2VsbCwgeCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuX2RhdGFbeF1beV0gPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RlcCgpOiB2b2lkIHtcbiAgICAgICAgLy8gVE9ETyBjYWxjdWxhdGUgbmV3IGNlbGxzOyBqdXN0IHJhbmRvbWl6ZSBmb3Igbm93XG4gICAgICAgIHRoaXMucmFuZG9taXplKCk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBkYXRhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZGF0YTsgICAgICAgIFxuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgZGF0YShkYXRhOiBudW1iZXJbXVtdKSB7XG4gICAgICAgIGlmICghZGF0YSkgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGJvYXJkIGRhdGEnKTtcbiAgICAgICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCB3aWR0aCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9kYXRhKSByZXR1cm4gMDtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGFbMF0ubGVuZ3RoO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaGVpZ2h0KCkge1xuICAgICAgICBpZiAoIXRoaXMuX2RhdGEpIHJldHVybiAwO1xuICAgICAgICByZXR1cm4gdGhpcy5fZGF0YS5sZW5ndGg7XG4gICAgfVxufSIsImltcG9ydCB7IEJvYXJkIH0gZnJvbSBcIi4vQm9hcmRcIjtcblxuZXhwb3J0IGNsYXNzIFJlbmRlcmVyIHtcbiAgICBwcm90ZWN0ZWQgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudDtcbiAgICBwcm90ZWN0ZWQgY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XG4gICAgcHJvdGVjdGVkIGJvYXJkITogQm9hcmQ7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm9hcmQnKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcbiAgICAgICAgdGhpcy5jdHggPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KCcyZCcpIGFzIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhcnQoYm9hcmQ6IEJvYXJkKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYm9hcmQgPSBib2FyZDtcbiAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB0aGlzLmRyYXcoKSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGRyYXcoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc2NhbGVUb0JvYXJkU2l6ZSgpO1xuXG4gICAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9ICdibGFjayc7XG4gICAgICAgIHRoaXMuYm9hcmQuZGF0YS5mb3JFYWNoKChyb3csIHkpID0+IHtcbiAgICAgICAgICAgIHJvdy5mb3JFYWNoKChjZWxsLCB4KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGNlbGwpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3R4LmZpbGxSZWN0KHgsIHksIDEsIDEpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5kcmF3KCkpO1xuICAgIH1cbiAgICBcbiAgICBwcm90ZWN0ZWQgc2NhbGVUb0JvYXJkU2l6ZSgpIHtcbiAgICAgICAgdGhpcy5jdHgucmVzdG9yZSgpO1xuICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCA9IHRoaXMuY2FudmFzLmNsaWVudFdpZHRoO1xuICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgPSB0aGlzLmNhbnZhcy5jbGllbnRIZWlnaHQ7XG4gICAgICAgIHRoaXMuY3R4LnNjYWxlKHRoaXMuY2FudmFzLndpZHRoIC8gdGhpcy5ib2FyZC53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0IC8gdGhpcy5ib2FyZC5oZWlnaHQpO1xuICAgIH1cbn0iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiaW1wb3J0IHsgQm9hcmQgfSBmcm9tIFwiLi9Cb2FyZFwiO1xuaW1wb3J0IHsgUmVuZGVyZXIgfSBmcm9tIFwiLi9SZW5kZXJlclwiO1xuXG53aW5kb3cub25sb2FkID0gKCkgPT4ge1xuICAgIGxldCBib2FyZCA9IG5ldyBCb2FyZCgxMCwgMTApO1xuICAgIFxuICAgIGxldCByZW5kZXJlciA9IG5ldyBSZW5kZXJlcigpO1xuICAgIHJlbmRlcmVyLnN0YXJ0KGJvYXJkKTtcblxuICAgIC8vIG1vY2sgZ2FtZSBsb29wXG4gICAgc2V0SW50ZXJ2YWwoKCkgPT4gYm9hcmQuc3RlcCgpLCAxMDAwKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9