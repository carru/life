(()=>{"use strict";var t={336:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Board=void 0,e.Board=class{constructor(){this._data=[]}get data(){return this._data}set data(t){if(!t)throw new Error("Invalid board data");this._data=t}get width(){return this._data?this._data[0].length:0}get height(){return this._data?this._data.length:0}}},570:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Renderer=void 0,e.Renderer=class{constructor(){this.canvas=document.getElementById("board"),this.ctx=this.canvas.getContext("2d")}draw(t){t&&(this.scaleToBoardSize(t),this.ctx.fillStyle="black",t.data.forEach(((t,e)=>{t.forEach(((t,a)=>{t&&this.ctx.fillRect(a,e,1,1)}))})))}scaleToBoardSize(t){this.ctx.restore(),this.canvas.width=this.canvas.clientWidth,this.canvas.height=this.canvas.clientHeight,this.ctx.scale(this.canvas.width/t.width,this.canvas.height/t.height)}}}},e={};function a(r){var s=e[r];if(void 0!==s)return s.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,a),i.exports}(()=>{const t=a(336),e=a(570);window.onload=()=>{let a=new e.Renderer,r=new t.Board;r.data=[[1,0,1],[0,1,0],[1,0,1]],a.draw(r)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saWZlLy4vc3JjL0JvYXJkLnRzIiwid2VicGFjazovL2xpZmUvLi9zcmMvUmVuZGVyZXIudHMiLCJ3ZWJwYWNrOi8vbGlmZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9saWZlLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbIl9kYXRhIiwidGhpcyIsImRhdGEiLCJFcnJvciIsImxlbmd0aCIsImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjdHgiLCJnZXRDb250ZXh0IiwiYm9hcmQiLCJzY2FsZVRvQm9hcmRTaXplIiwiZmlsbFN0eWxlIiwiZm9yRWFjaCIsInJvdyIsInkiLCJjZWxsIiwieCIsImZpbGxSZWN0IiwicmVzdG9yZSIsIndpZHRoIiwiY2xpZW50V2lkdGgiLCJoZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJzY2FsZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwid2luZG93Iiwib25sb2FkIiwicmVuZGVyZXIiLCJSZW5kZXJlciIsIkJvYXJkIiwiZHJhdyJdLCJtYXBwaW5ncyI6InNHQUFBLDRCQUNjLEtBQUFBLE1BQW9CLEdBRTlCLFdBQ0ksT0FBT0MsS0FBS0QsTUFHaEIsU0FBZ0JFLEdBQ1osSUFBS0EsRUFBTSxNQUFNLElBQUlDLE1BQU0sc0JBQzNCRixLQUFLRCxNQUFRRSxFQUdqQixZQUNJLE9BQUtELEtBQUtELE1BQ0hDLEtBQUtELE1BQU0sR0FBR0ksT0FERyxFQUk1QixhQUNJLE9BQUtILEtBQUtELE1BQ0hDLEtBQUtELE1BQU1JLE9BRE0sSywrRUNoQmhDLGlCQUlJLGNBQ0lILEtBQUtJLE9BQVNDLFNBQVNDLGVBQWUsU0FDdENOLEtBQUtPLElBQU1QLEtBQUtJLE9BQU9JLFdBQVcsTUFHL0IsS0FBS0MsR0FDSEEsSUFFTFQsS0FBS1UsaUJBQWlCRCxHQUV0QlQsS0FBS08sSUFBSUksVUFBWSxRQUNyQkYsRUFBTVIsS0FBS1csU0FBUSxDQUFDQyxFQUFLQyxLQUNyQkQsRUFBSUQsU0FBUSxDQUFDRyxFQUFNQyxLQUNYRCxHQUNBZixLQUFLTyxJQUFJVSxTQUFTRCxFQUFHRixFQUFHLEVBQUcsVUFLakMsaUJBQWlCTCxHQUN2QlQsS0FBS08sSUFBSVcsVUFDVGxCLEtBQUtJLE9BQU9lLE1BQVFuQixLQUFLSSxPQUFPZ0IsWUFDaENwQixLQUFLSSxPQUFPaUIsT0FBU3JCLEtBQUtJLE9BQU9rQixhQUNqQ3RCLEtBQUtPLElBQUlnQixNQUFNdkIsS0FBS0ksT0FBT2UsTUFBUVYsRUFBTVUsTUFBT25CLEtBQUtJLE9BQU9pQixPQUFTWixFQUFNWSxZQzVCL0VHLEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJFLElBQWpCRCxFQUNILE9BQU9BLEVBQWFFLFFBR3JCLElBQUlDLEVBQVNOLEVBQXlCRSxHQUFZLENBR2pERyxRQUFTLElBT1YsT0FIQUUsRUFBb0JMLEdBQVVJLEVBQVFBLEVBQU9ELFFBQVNKLEdBRy9DSyxFQUFPRCxRLE1DckJmLGVBQ0EsU0FFQUcsT0FBT0MsT0FBUyxLQUNaLElBQUlDLEVBQVcsSUFBSSxFQUFBQyxTQUVmMUIsRUFBUSxJQUFJLEVBQUEyQixNQUNoQjNCLEVBQU1SLEtBQU8sQ0FDVCxDQUFDLEVBQUcsRUFBRyxHQUNQLENBQUMsRUFBRyxFQUFHLEdBQ1AsQ0FBQyxFQUFHLEVBQUcsSUFHWGlDLEVBQVNHLEtBQUs1QixLIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBCb2FyZCB7XG4gICAgcHJvdGVjdGVkIF9kYXRhOiBudW1iZXJbXVtdID0gW107XG5cbiAgICBwdWJsaWMgZ2V0IGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhOyAgICAgICAgXG4gICAgfVxuXG4gICAgcHVibGljIHNldCBkYXRhKGRhdGE6IG51bWJlcltdW10pIHtcbiAgICAgICAgaWYgKCFkYXRhKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgYm9hcmQgZGF0YScpO1xuICAgICAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHdpZHRoKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2RhdGEpIHJldHVybiAwO1xuICAgICAgICByZXR1cm4gdGhpcy5fZGF0YVswXS5sZW5ndGg7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBoZWlnaHQoKSB7XG4gICAgICAgIGlmICghdGhpcy5fZGF0YSkgcmV0dXJuIDA7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhLmxlbmd0aDtcbiAgICB9XG59IiwiaW1wb3J0IHsgQm9hcmQgfSBmcm9tIFwiLi9Cb2FyZFwiO1xuXG5leHBvcnQgY2xhc3MgUmVuZGVyZXIge1xuICAgIHByb3RlY3RlZCBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50O1xuICAgIHByb3RlY3RlZCBjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib2FyZCcpIGFzIEhUTUxDYW52YXNFbGVtZW50O1xuICAgICAgICB0aGlzLmN0eCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoJzJkJykgYXMgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xuICAgIH1cblxuICAgIHB1YmxpYyBkcmF3KGJvYXJkOiBCb2FyZCk6IHZvaWQge1xuICAgICAgICBpZiAoIWJvYXJkKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy5zY2FsZVRvQm9hcmRTaXplKGJvYXJkKTtcblxuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnYmxhY2snO1xuICAgICAgICBib2FyZC5kYXRhLmZvckVhY2goKHJvdywgeSkgPT4ge1xuICAgICAgICAgICAgcm93LmZvckVhY2goKGNlbGwsIHgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoY2VsbClcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdHguZmlsbFJlY3QoeCwgeSwgMSwgMSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbiAgICBcbiAgICBwcm90ZWN0ZWQgc2NhbGVUb0JvYXJkU2l6ZShib2FyZDogQm9hcmQpIHtcbiAgICAgICAgdGhpcy5jdHgucmVzdG9yZSgpO1xuICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCA9IHRoaXMuY2FudmFzLmNsaWVudFdpZHRoO1xuICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgPSB0aGlzLmNhbnZhcy5jbGllbnRIZWlnaHQ7XG4gICAgICAgIHRoaXMuY3R4LnNjYWxlKHRoaXMuY2FudmFzLndpZHRoIC8gYm9hcmQud2lkdGgsIHRoaXMuY2FudmFzLmhlaWdodCAvIGJvYXJkLmhlaWdodCk7XG4gICAgfVxufSIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCJpbXBvcnQgeyBCb2FyZCB9IGZyb20gXCIuL0JvYXJkXCI7XG5pbXBvcnQgeyBSZW5kZXJlciB9IGZyb20gXCIuL1JlbmRlcmVyXCI7XG5cbndpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgbGV0IHJlbmRlcmVyID0gbmV3IFJlbmRlcmVyO1xuXG4gICAgbGV0IGJvYXJkID0gbmV3IEJvYXJkKCk7XG4gICAgYm9hcmQuZGF0YSA9IFtcbiAgICAgICAgWzEsIDAsIDFdLFxuICAgICAgICBbMCwgMSwgMF0sXG4gICAgICAgIFsxLCAwLCAxXVxuICAgIF07XG5cbiAgICByZW5kZXJlci5kcmF3KGJvYXJkKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9